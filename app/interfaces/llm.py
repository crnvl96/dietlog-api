"""LLM (Large Language Model) service interface module.

This module defines the abstract base class `LLMService`, which provides the interface
for interacting with large language models. Implementations of this class are responsible
for handling specific logic for generating image descriptions and streaming nutritional feedback.
"""

from abc import ABC, abstractmethod

from fastapi.responses import StreamingResponse


class LLMService(ABC):
    """Abstract base class for LLM services.

    This class defines the interface for generating image descriptions and streaming
    nutritional feedback using large language models.
    """

    @abstractmethod
    async def get_image_description(self, image_data: str) -> str:
        """Generate a description for an image using a large language model.

        Parameters
        ----------
        image_data : str
            The base64-encoded string representation of the image.

        Returns
        -------
        str
            A textual description of the image generated by the LLM.

        """

    @abstractmethod
    async def stream_nutritional_feedback(self, img_description: str) -> StreamingResponse:
        """Stream nutritional feedback based on a user prompt using a large language model.

        Parameters
        ----------
        img_description : str
            The user's input prompt, typically related to nutritional information or queries.

        Returns
        -------
        StreamingResponse
            A streaming response containing the LLM-generated feedback in real-time.

        """
